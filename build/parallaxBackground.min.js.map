{"version":3,"sources":["parallaxBackground.es6"],"names":["$","fn","parallaxBackground","method","methods","init","options","settings","extend","type","zoom","gyroPerspective","gyroAnimationType","animate_duration","scrollTop","windowHeight","triggerPosition","shift","innerHeight","window","on","height","this","each","_section","sectionHeight","outerHeight","_sectionInner","find","animationTriggerStart","animationTriggerEnd","offset","animationLength","coef","css","overflow","top","left","width","position","addClass","centerPixelShift","centerPercentShift","y","transform","removeClass","TweenLite","console","warn","CSSPlugin","ww","wh","deviceOrientation","innerWidth","animateDuration","$thisSection","$thisInner","innerSize","lastGamma","lastBeta","rangeGamma","rangeBeta","set","perspective","transformStyle","addEventListener","e","roundedGamma","Math","round","gamma","roundedBeta","beta","x","gamaInPercent","betaInPercent","to","rotationX","rotationY","sectionWidth","outerWidth","pageX","pageY","cursorPercentPositionX","cursorPercentPositionY","mouseleave","apply","Array","prototype","slice","call","arguments","_typeof","error","jQuery"],"mappings":"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","file":"parallaxBackground.min.js","sourcesContent":["(function ($) {\n\n\n    $.fn.parallaxBackground = function (method) {\n\n        var methods = {\n            \n\n            init: function (options) {\n\n                let settings = $.extend({\n                    type: 'scroll',\n                    zoom: 30,\n                    gyroPerspective: 1400,\n                    gyroAnimationType: 'shift',\n                    animate_duration: 0.5\n                }, options);\n\n\n\n                if (settings.type == 'scroll') {\n\n                    let scrollTop = 0,\n                        windowHeight = 0,\n                        triggerPosition = 0,\n                        zoom = settings.zoom,\n                        shift = zoom / 2,\n                        innerHeight = zoom + 100;\n\n\n                    $(window).on('scroll load', function () {\n                        scrollTop = $(window).scrollTop();\n                        windowHeight = $(window).height();\n\n                        triggerPosition = scrollTop + windowHeight;\n                    });\n\n\n                    this.each(function () {\n\n\n                        let _section = $(this),\n                            sectionHeight = _section.outerHeight(),\n                            _sectionInner = _section.find('.parallax-inner'),\n                            animationTriggerStart = 0,\n                            animationTriggerEnd = 0,\n                            offset = 0,\n                            animationLength = 0,\n                            coef = innerHeight / 100;\n\n                        _section.css({\n                            'overflow': 'hidden'\n                        });\n\n                        _sectionInner.css({\n                            'top': -shift + '%',\n                            'left': 0,\n                            'height': innerHeight + '%',\n                            'width': '100%',\n                            'position': 'absolute'\n                        });\n\n\n                        $(window).on('load resize', function () {\n\n                            offset = _section.offset();\n\n                            animationTriggerStart = offset.top;\n\n                            animationTriggerEnd = animationTriggerStart + windowHeight;\n\n                            animationLength = animationTriggerEnd - animationTriggerStart;\n                        });\n\n\n                        $(window).on('scroll resize load', function () {\n\n                            if (triggerPosition > animationTriggerStart && triggerPosition < animationTriggerEnd + sectionHeight) {\n\n                                _section.addClass('active');\n\n                                let centerPixelShift = triggerPosition - offset.top - (animationLength * 0.5);\n\n                                let centerPercentShift = centerPixelShift / (animationLength / 100) * 2;\n\n                                let y = shift / coef / 100 * centerPercentShift;\n\n\n                                _sectionInner.css({\n                                    \"transform\": \"translate3d(0,\" + y + \"%, 0)\"\n                                });\n                            }\n\n                            else {\n                                _section.removeClass('active');\n                            }\n\n                        })\n\n\n                    });\n                }\n\n                else if (settings.type == 'gyro') {\n\n\n                    if (typeof TweenLite === 'undefined') {\n                        console.warn('TweenMax or TweenLite library is required... https://greensock.com/tweenlite');\n                        return;\n                    }\n\n                    if (typeof CSSPlugin === 'undefined') {\n                        console.warn('CSSPlugin in required... https://greensock.com/CSSPlugin');\n                        return;\n                    }\n\n                    let ww = 0,\n                        wh = 0,\n                        deviceOrientation = 0;\n\n                    $(window).on('load resize', function () {\n                        ww = window.innerWidth;\n                        wh = window.innerHeight;\n\n                        if (ww > wh) {\n                            deviceOrientation = 'landscape'\n                        }\n\n                        else {\n                            deviceOrientation = 'portrait'\n                        }\n\n\n                    });\n\n                    this.each(function () {\n\n                        let animateDuration = settings.animate_duration,\n                            zoom = settings.zoom,\n                            shift = zoom / 2,\n                            $thisSection = $(this),\n                            $thisInner = $thisSection.find('.parallax-inner'),\n\n                            innerSize = shift * 2 + 100,\n                            coef = innerSize / 100,\n\n                            lastGamma = 0,\n                            lastBeta = 0,\n                            rangeGamma = 0,\n                            rangeBeta = 0;\n\n                        $thisSection.css({\n                            'overflow': 'hidden'\n                        });\n\n\n                        $thisInner.css({\n                            'top': -shift + '%',\n                            'left': -shift + '%',\n                            'height': innerSize + '%',\n                            'width': innerSize + '%',\n                            'position': 'absolute'\n\n                        });\n\n\n                        if (settings.gyroAnimationType == 'rotate') {\n                            TweenLite.set($thisSection, {perspective: settings.gyroPerspective});\n                            TweenLite.set($thisInner, {transformStyle: \"preserve-3d\"});\n                        }\n\n\n                        window.addEventListener(\"deviceorientation\", function (e) {\n\n\n                            let roundedGamma = Math.round(e.gamma),\n                                roundedBeta = Math.round(e.beta),\n                                x = 0,\n                                y = 0;\n\n                            // $('.debug .gamma').text(roundedGamma);\n                            // $('.debug .beta').text(roundedBeta);\n\n                            if (roundedGamma > lastGamma && rangeGamma < 15) {\n                                rangeGamma++;\n                            }\n                            else if (roundedGamma < lastGamma && rangeGamma > -15) {\n                                rangeGamma--;\n                            }\n\n                            if (roundedBeta > lastBeta && rangeBeta < 15) {\n                                rangeBeta++;\n                            }\n                            else if (roundedBeta < lastBeta && rangeBeta > -15) {\n                                rangeBeta--;\n                            }\n\n                            lastGamma = roundedGamma;\n                            lastBeta = roundedBeta;\n\n                            let gamaInPercent = (100 / 15) * rangeGamma,\n                                betaInPercent = (100 / 15) * rangeBeta;\n\n\n                            //TODO Organize orientation statement\n\n                            if (deviceOrientation == 'landscape') {\n                                x = shift / coef / 100 * betaInPercent;\n                                y = shift / coef / 100 * gamaInPercent;\n                            }\n\n                            else {\n                                x = shift / coef / 100 * gamaInPercent;\n                                y = (shift / coef / 100 * betaInPercent) * -1;\n                            }\n\n\n                            // $('.debug .x').text(x);\n                            // $('.debug .y').text(y);\n\n\n                            if (settings.gyroAnimationType == 'shift') {\n                                TweenLite.to($thisInner, animateDuration, {x: x + '%', y: y + '%'});\n                            }\n\n                            else if (settings.gyroAnimationType == 'rotate') {\n                                TweenLite.to($thisInner, animateDuration, {rotationX: -y + '%', rotationY: -x + '%'});\n                            }\n\n\n                        }, true);\n\n\n                        $thisSection.on(\"mousemove\", function (e) {\n\n                            let offset = $thisSection.offset(),\n\n                                sectionWidth = $thisSection.outerWidth(),\n                                sectionHeight = $thisSection.outerHeight(),\n\n                                pageX = e.pageX - offset.left - ($thisSection.width() * 0.5),\n                                pageY = e.pageY - offset.top - ($thisSection.height() * 0.5),\n\n                                cursorPercentPositionX = pageX / (sectionWidth / 100) * 2,\n                                cursorPercentPositionY = pageY / (sectionHeight / 100) * 2,\n\n                                x = shift / coef / 100 * cursorPercentPositionX,\n                                y = shift / coef / 100 * cursorPercentPositionY;\n\n\n                            // $('.debug .x').text(x);\n                            // $('.debug .y').text(y);\n\n                            if (settings.gyroAnimationType == 'shift') {\n                                TweenLite.to($thisInner, animateDuration, {x: x + '%', y: y + '%'});\n                                \n                            }\n\n                            else if (settings.gyroAnimationType == 'rotate') {\n                                TweenLite.to($thisInner, animateDuration, {rotationX: y + '%', rotationY: -x + '%'});\n                            }\n\n                        });\n\n\n                        $thisSection.mouseleave(function () {\n\n                            if (settings.gyroAnimationType == 'shift') {\n\n                                TweenLite.to($thisInner, animateDuration, {x: '0%', y: '0%'});\n                            }\n\n                            else if (settings.gyroAnimationType == 'rotate') {\n                                TweenLite.to($thisInner, animateDuration, {rotationX: 0, rotationY: 0});\n                            }\n\n                        });\n                    });\n                }\n            }\n        };\n\n\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('There is no method with the name ' + method + ', for jQuery.parallaxBackground');\n        }\n    };\n\n\n})(jQuery);\n"]}