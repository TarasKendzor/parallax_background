{"version":3,"sources":["parallaxBackground.es6"],"names":["factory","define","amd","exports","module","require","jQuery","$","fn","parallaxBackground","method","methods","init","options","settings","extend","event","animation_type","zoom","rotate_perspective","animate_duration","TweenLite","console","warn","CSSPlugin","ww","wh","deviceOrientation","viewport_top","viewport_bottom","window","on","innerWidth","innerHeight","scrollTop","this","each","animateDuration","$thisSection","$thisInner","find","innerSize","coef","shift","lastGamma","lastBeta","rangeGamma","rangeBeta","css","overflow","top","left","height","width","position","set","perspective","transformStyle","section_offset_top","section_offset_bottom","animation_progress_px","animation_progress_percent","section_height","animation_length","outerHeight","offset","addClass","to","y","rotationX","removeClass","addEventListener","e","roundedGamma","Math","round","gamma","roundedBeta","beta","x","gamaInPercent","betaInPercent","rotationY","sectionWidth","outerWidth","sectionHeight","pageX","pageY","cursorPercentPositionX","cursorPercentPositionY","mouseleave","apply","Array","prototype","slice","call","arguments","_typeof","error"],"mappings":"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","file":"parallaxBackground.min.js","sourcesContent":["/*\n\n Parallax Background\n\n Author: lemehovskiy\n Website: https://github.com/lemehovskiy\n\n */\n\n;(function (factory) {\n    'use strict';\n\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n})\n\n(function ($) {\n\n    $.fn.parallaxBackground = function (method) {\n\n        let methods = {\n\n            init: function (options) {\n\n                let settings = $.extend({\n                    event: 'scroll',\n                    animation_type: 'shift',\n                    zoom: 20,\n                    rotate_perspective: 1400,\n                    animate_duration: 1\n                }, options);\n\n\n\n                if (typeof TweenLite === 'undefined') {\n                    console.warn('TweenMax or TweenLite library is required... https://greensock.com/tweenlite');\n                    return;\n                }\n\n                if (typeof CSSPlugin === 'undefined') {\n                    console.warn('CSSPlugin in required... https://greensock.com/CSSPlugin');\n                    return;\n                }\n\n                let ww = 0,\n                    wh = 0,\n                    deviceOrientation = '',\n                    viewport_top = 0,\n                    viewport_bottom = 0;\n\n\n                $(window).on('load resize', function () {\n                    ww = window.innerWidth;\n                    wh = window.innerHeight;\n\n                    if (ww > wh) {\n                        deviceOrientation = 'landscape'\n                    }\n\n                    else {\n                        deviceOrientation = 'portrait'\n                    }\n\n                });\n\n\n                if (settings.event == 'scroll') {\n                    $(window).on('load scroll', function () {\n\n                        viewport_top = $(window).scrollTop();\n                        viewport_bottom = viewport_top + wh;\n\n                    });\n                }\n\n                this.each(function () {\n\n                    let animateDuration = settings.animate_duration,\n                        zoom = settings.zoom,\n                        $thisSection = $(this),\n                        $thisInner = $thisSection.find('.parallax-inner'),\n\n                        innerSize = zoom + 100,\n                        coef = innerSize / 100,\n\n                        shift = zoom / 2 / coef,\n\n                        lastGamma = 0,\n                        lastBeta = 0,\n                        rangeGamma = 0,\n                        rangeBeta = 0;\n\n                    $thisSection.css({\n                        'overflow': 'hidden'\n                    });\n\n\n                    $thisInner.css({\n                        'top': - zoom / 2 + '%',\n                        'left': - zoom / 2 + '%',\n                        'height': innerSize + '%',\n                        'width': innerSize + '%',\n                        'position': 'absolute'\n\n                    });\n\n\n                    if (settings.animation_type == 'rotate') {\n                        TweenLite.set($thisSection, {perspective: settings.rotate_perspective});\n                        TweenLite.set($thisInner, {transformStyle: \"preserve-3d\"});\n                    }\n\n\n                    if (settings.event == 'scroll') {\n\n                        let section_offset_top = 0,\n                            section_offset_bottom = 0,\n\n                            animation_progress_px = 0,\n\n                            animation_progress_percent = 0,\n\n                            section_height = 0,\n                            animation_length = 0;\n\n\n\n                        $(window).on('load resize', function () {\n\n                            section_height = $thisSection.outerHeight();\n\n                            section_offset_top = $thisSection.offset().top;\n                            section_offset_bottom = section_offset_top + section_height;\n\n                            animation_length = section_height + wh;\n\n                        });\n\n\n                        $(window).on('scroll resize load', function () {\n\n                            if (viewport_bottom > section_offset_top && viewport_top < section_offset_bottom) {\n\n                                $thisSection.addClass('active');\n\n                                animation_progress_px = viewport_bottom - section_offset_top - (animation_length / 2);\n\n                                animation_progress_percent = animation_progress_px / (animation_length / 2);\n\n\n\n                                if (settings.animation_type == 'shift') {\n                                    TweenLite.to($thisInner, animateDuration, {y: shift * animation_progress_percent + '%'});\n\n                                }\n\n                                else if (settings.animation_type == 'rotate') {\n                                    TweenLite.to($thisInner, animateDuration, {rotationX: shift * animation_progress_percent + '%'});\n                                }\n\n                            }\n\n                            else {\n                                $thisSection.removeClass('active');\n                            }\n\n                        })\n\n                    }\n\n                    else if (settings.event == 'mouse_move') {\n\n                        window.addEventListener(\"deviceorientation\", function (e) {\n\n                            let roundedGamma = Math.round(e.gamma),\n                                roundedBeta = Math.round(e.beta),\n                                x = 0,\n                                y = 0;\n\n                            if (roundedGamma > lastGamma && rangeGamma < 15) {\n                                rangeGamma++;\n                            }\n                            else if (roundedGamma < lastGamma && rangeGamma > -15) {\n                                rangeGamma--;\n                            }\n\n                            if (roundedBeta > lastBeta && rangeBeta < 15) {\n                                rangeBeta++;\n                            }\n                            else if (roundedBeta < lastBeta && rangeBeta > -15) {\n                                rangeBeta--;\n                            }\n\n                            lastGamma = roundedGamma;\n                            lastBeta = roundedBeta;\n\n                            let gamaInPercent = (100 / 15) * rangeGamma,\n                                betaInPercent = (100 / 15) * rangeBeta;\n\n\n                            //TODO Organize orientation statement\n\n                            if (deviceOrientation == 'landscape') {\n                                x = shift / coef / 100 * betaInPercent;\n                                y = shift / coef / 100 * gamaInPercent;\n                            }\n\n                            else {\n                                x = shift / coef / 100 * gamaInPercent;\n                                y = (shift / coef / 100 * betaInPercent) * -1;\n                            }\n\n\n\n                            if (settings.animation_type == 'shift') {\n                                TweenLite.to($thisInner, animateDuration, {x: y + '%', y: x + '%'});\n                            }\n\n                            else if (settings.animation_type == 'rotate') {\n                                TweenLite.to($thisInner, animateDuration, {rotationX: -y + '%', rotationY: -x + '%'});\n                            }\n\n\n                        }, true);\n\n\n                        $thisSection.on(\"mousemove\", function (e) {\n\n                            let offset = $thisSection.offset(),\n\n                                sectionWidth = $thisSection.outerWidth(),\n                                sectionHeight = $thisSection.outerHeight(),\n\n                                pageX = e.pageX - offset.left - ($thisSection.width() * 0.5),\n                                pageY = e.pageY - offset.top - ($thisSection.height() * 0.5),\n\n                                cursorPercentPositionX = pageX / sectionWidth  * 2,\n                                cursorPercentPositionY = pageY / sectionHeight * 2,\n\n                                x = shift * cursorPercentPositionX,\n                                y = shift * cursorPercentPositionY;\n\n\n                            if (settings.animation_type == 'shift') {\n                                TweenLite.to($thisInner, animateDuration, {x: x + '%', y: y + '%'});\n\n                            }\n\n                            else if (settings.animation_type == 'rotate') {\n                                TweenLite.to($thisInner, animateDuration, {rotationX: y + '%', rotationY: -x + '%'});\n                            }\n\n                        });\n\n\n                        $thisSection.mouseleave(function () {\n\n                            if (settings.animation_type == 'shift') {\n\n                                TweenLite.to($thisInner, animateDuration, {x: '0%', y: '0%'});\n                            }\n\n                            else if (settings.animation_type == 'rotate') {\n                                TweenLite.to($thisInner, animateDuration, {rotationX: 0, rotationY: 0});\n                            }\n\n                        });\n\n                    }\n\n                });\n            }\n            // }\n        };\n\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('There is no method with the name ' + method + ', for jQuery.parallaxBackground');\n        }\n    };\n\n});\n"]}