{"version":3,"sources":["parallax.es6"],"names":["$","fn","parallax","method","methods","init","options","settings","extend","type","zoom","animateDuration","perspective","gyroAnimationType","scrollTop","windowHeight","triggerPosition","shift","innerHeight","window","on","height","this","each","_section","sectionHeight","outerHeight","_sectionInner","find","animationTriggerStart","animationTriggerEnd","offset","animationLength","coef","css","top","left","width","addClass","centerPixelShift","centerPercentShift","y","TweenLite","to","ease","Linear","easeNone","removeClass","ww","wh","deviceOrientation","innerWidth","$thisSection","$thisInner","innerSize","lastGamma","lastBeta","rangeGamma","rangeBeta","set","transformStyle","addEventListener","e","roundedGamma","Math","round","gamma","roundedBeta","beta","x","gamaInPercent","betaInPercent","rotationX","rotationY","sectionWidth","outerWidth","pageX","pageY","cursorPercentPositionX","cursorPercentPositionY","mouseleave","apply","Array","prototype","slice","call","arguments","_typeof","error","jQuery"],"mappings":"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","file":"parallax.min.js","sourcesContent":["(function ($) {\n\n\n    $.fn.parallax = function (method) {\n\n        var methods = {\n\n            init: function (options) {\n\n                let settings = $.extend({\n                    type: 'scroll',\n                    zoom: 30,\n                    animateDuration: 0.5,\n                    perspective: 1000,\n                    gyroAnimationType: 'shift'\n                }, options);\n\n\n\n                if (settings.type == 'scroll') {\n\n                    let scrollTop = 0,\n                        windowHeight = 0,\n                        triggerPosition = 0,\n                        zoom = settings.zoom,\n                        shift = zoom / 2,\n                        innerHeight = zoom + 100;\n\n\n                    $(window).on('scroll load', function () {\n                        scrollTop = $(window).scrollTop();\n                        windowHeight = $(window).height();\n\n                        triggerPosition = scrollTop + windowHeight;\n                    });\n\n\n                    this.each(function () {\n\n\n                        let _section = $(this),\n                            sectionHeight = _section.outerHeight(),\n                            _sectionInner = _section.find('.parallax-inner'),\n                            animationTriggerStart = 0,\n                            animationTriggerEnd = 0,\n                            offset = 0,\n                            animationLength = 0,\n                            coef = innerHeight / 100;\n\n\n                        _sectionInner.css({\n                            'top': -shift + '%',\n                            'left': 0,\n                            'height': innerHeight + '%',\n                            'width': '100%'\n                        });\n\n\n                        $(window).on('load resize', function () {\n\n                            offset = _section.offset();\n\n                            animationTriggerStart = offset.top;\n\n                            animationTriggerEnd = animationTriggerStart + windowHeight;\n\n                            animationLength = animationTriggerEnd - animationTriggerStart;\n                        });\n\n\n                        $(window).on('scroll resize load', function () {\n\n                            if (triggerPosition > animationTriggerStart && triggerPosition < animationTriggerEnd + sectionHeight) {\n\n                                _section.addClass('active');\n\n                                let centerPixelShift = triggerPosition - offset.top - (animationLength * 0.5);\n\n                                let centerPercentShift = centerPixelShift / (animationLength / 100) * 2;\n\n                                let y = shift / coef / 100 * centerPercentShift;\n\n\n                                TweenLite.to(_sectionInner, settings.animateDuration, {\n                                    y: y + '%',\n                                    ease: Linear.easeNone\n                                });\n\n                            }\n\n                            else {\n                                _section.removeClass('active');\n                            }\n\n                        })\n\n\n                    });\n                }\n\n                else if (settings.type == 'gyro') {\n\n                    let ww = 0,\n                        wh = 0,\n                        deviceOrientation = 0;\n\n                    $(window).on('load resize', function () {\n                        ww = window.innerWidth;\n                        wh = window.innerHeight;\n\n                        if (ww > wh) {\n                            deviceOrientation = 'landscape'\n                        }\n\n                        else {\n                            deviceOrientation = 'portrait'\n                        }\n\n\n                        // $('.debug .orientation').text(deviceOrientation);\n\n                    });\n\n                    this.each(function () {\n\n                        let animateDuration = settings.animateDuration,\n                            zoom = settings.zoom,\n                            shift = zoom / 2,\n                            $thisSection = $(this),\n                            $thisInner = $thisSection.find('.parallax-inner'),\n\n                            innerSize = shift * 2 + 100,\n                            coef = innerSize / 100,\n\n                            lastGamma = 0,\n                            lastBeta = 0,\n                            rangeGamma = 0,\n                            rangeBeta = 0;\n\n\n                        $thisInner.css({\n                            'top': -shift + '%',\n                            'left': -shift + '%',\n                            'height': innerSize + '%',\n                            'width': innerSize + '%'\n\n                        });\n\n\n                        if (settings.gyroAnimationType == 'rotate') {\n                            TweenLite.set($thisSection, {perspective: settings.perspective});\n                            TweenLite.set($thisInner, {transformStyle: \"preserve-3d\"});\n                        }\n\n\n                        window.addEventListener(\"deviceorientation\", function (e) {\n\n\n                            let roundedGamma = Math.round(e.gamma),\n                                roundedBeta = Math.round(e.beta),\n                                x = 0,\n                                y = 0;\n\n                            // $('.debug .gamma').text(roundedGamma);\n                            // $('.debug .beta').text(roundedBeta);\n\n                            if (roundedGamma > lastGamma && rangeGamma < 15) {\n                                rangeGamma++;\n                            }\n                            else if (roundedGamma < lastGamma && rangeGamma > -15) {\n                                rangeGamma--;\n                            }\n\n                            if (roundedBeta > lastBeta && rangeBeta < 15) {\n                                rangeBeta++;\n                            }\n                            else if (roundedBeta < lastBeta && rangeBeta > -15) {\n                                rangeBeta--;\n                            }\n\n                            lastGamma = roundedGamma;\n                            lastBeta = roundedBeta;\n\n                            let gamaInPercent = (100 / 15) * rangeGamma,\n                                betaInPercent = (100 / 15) * rangeBeta;\n\n\n                            //TODO Organize orientation statement\n\n                            if (deviceOrientation == 'landscape') {\n                                x = shift / coef / 100 * betaInPercent;\n                                y = shift / coef / 100 * gamaInPercent;\n                            }\n\n                            else {\n                                x = shift / coef / 100 * gamaInPercent;\n                                y = (shift / coef / 100 * betaInPercent) * -1;\n                            }\n\n\n                            // $('.debug .x').text(x);\n                            // $('.debug .y').text(y);\n\n\n                            if (settings.gyroAnimationType == 'shift') {\n                                TweenLite.to($thisInner, animateDuration, {x: x + '%', y: y + '%'});\n                            }\n\n                            else if (settings.gyroAnimationType == 'rotate') {\n                                TweenLite.to($thisInner, animateDuration, {rotationX: -y + '%', rotationY: -x + '%'});\n                            }\n\n\n                        }, true);\n\n\n                        $thisSection.on(\"mousemove\", function (e) {\n\n                            let offset = $thisSection.offset(),\n\n                                sectionWidth = $thisSection.outerWidth(),\n                                sectionHeight = $thisSection.outerHeight(),\n\n                                pageX = e.pageX - offset.left - ($thisSection.width() * 0.5),\n                                pageY = e.pageY - offset.top - ($thisSection.height() * 0.5),\n\n                                cursorPercentPositionX = pageX / (sectionWidth / 100) * 2,\n                                cursorPercentPositionY = pageY / (sectionHeight / 100) * 2,\n\n                                x = shift / coef / 100 * cursorPercentPositionX,\n                                y = shift / coef / 100 * cursorPercentPositionY;\n\n\n                            // $('.debug .x').text(x);\n                            // $('.debug .y').text(y);\n\n                            if (settings.gyroAnimationType == 'shift') {\n                                TweenLite.to($thisInner, animateDuration, {x: x + '%', y: y + '%'});\n                            }\n\n                            else if (settings.gyroAnimationType == 'rotate') {\n                                TweenLite.to($thisInner, animateDuration, {rotationX: y + '%', rotationY: -x + '%'});\n                            }\n\n                        });\n\n\n                        $thisSection.mouseleave(function () {\n\n                            if (settings.gyroAnimationType == 'shift') {\n\n                                TweenLite.to($thisInner, animateDuration, {x: '0%', y: '0%'});\n                            }\n\n                            else if (settings.gyroAnimationType == 'rotate') {\n                                TweenLite.to($thisInner, animateDuration, {rotationX: 0, rotationY: 0});\n                            }\n\n                        });\n                    });\n                }\n            }\n        };\n\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('There is no method with the name ' + method + ', for jQuery.parallax');\n        }\n    };\n\n\n})(jQuery);\n"]}